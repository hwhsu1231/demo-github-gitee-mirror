name: ci-mirror-repository

on:
  workflow_dispatch:
  push:
    branches: 
      - master
  schedule:
    - cron: '20 20 * * *'

jobs:
  # check-preconditions:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     results: ${{ join(steps.*.outcome) }}
  #   steps:
  #     - id: secrets
  #       continue-on-error: true
  #       run: '[ -n "$SSH_PRIVATE_KEY" ]'
  #       env:
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  precondition:
    runs-on: ubuntu-latest
    steps:
      - name: Check Secrets
        shell: bash
        run: |
          SECRETS_EXIST=true
          if [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            echo "secrets.SSH_PRIVATE_KEY is missing."
            SECRETS_EXIST=false
          fi
          if [ "$SECRETS_EXIST" = "false" ]; then
            exit 1
          fi
      # - name: Check Variables
      #   shell: bash
      #   run: |
      #     VARIABLES_EXIST=true
      #     if [ -z "${{ vars.ACTOR_ID }}" ]; then
      #       echo "vars.ACTOR_ID is missing."
      #       VARIABLES_EXIST=false
      #     fi
      #     if [ -z "${{ vars.ACTOR_NAME }}" ]; then
      #       echo "vars.ACTOR_NAME is missing."
      #       VARIABLES_EXIST=false
      #     fi
      #     if [ -z "${{ vars.ACTOR_LOGIN }}" ]; then
      #       echo "vars.ACTOR_LOGIN is missing."
      #       VARIABLES_EXIST=false
      #     fi
      #     if [ "$VARIABLES_EXIST" = "false" ]; then
      #       exit 1
      #     fi

  get-matrix:
    runs-on: ubuntu-latest
    outputs:
      MATRIX: ${{ steps.gvl.outputs.MATRIX }}
    steps:
      - name: Checkout to '${{ github.ref }}'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Get MATRIX from mirrors.json
        id: gvl
        shell: bash
        run: |
          JQ_FILTER="{
            include: [
              .mirrors[] | {
                SERVER: .SERVER,
                REPO: (
                  if .REPO != \"[default]\" then .REPO
                  else \"${{ github.repository }}\" end
                )
              }
            ]
          }"
          JQ_FILE="mirrors.json"
          MATRIX=$(jq -c "${JQ_FILTER}" "${JQ_FILE}")
          echo "MATRIX:"
          echo "${MATRIX}" | jq "."

  caller:
    needs: get-matrix
    strategy:
      matrix: ${{ fromJSON(needs.get-matrix.outputs.MATRIX) }}
      fail-fast: false
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.SERVER }}
      cancel-in-progress: true
    uses: ./.github/workflows/use-mirror-repository.yml
    with:
      GIT_TARGET_SERVER: ${{ matrix.SERVER }}
      GIT_TARGET_REPO: ${{ matrix.REPO }}
    secrets:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
